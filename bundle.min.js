!function(e){var t={};function s(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,s),a.l=!0,a.exports}s.m=e,s.c=t,s.d=function(e,t,r){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(s.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)s.d(r,a,function(t){return e[t]}.bind(null,a));return r},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=0)}([function(e,t,s){"use strict";s.r(t);var r=e=>{e.create({key:"idle",frames:e.generateFrameNumbers("player",{start:0,end:8}),frameRate:8,repeat:-1}),e.create({key:"run",frames:e.generateFrameNumbers("player",{start:11,end:16}),frameRate:8,repeat:-1}),e.create({key:"jump1",frames:e.generateFrameNumbers("player",{start:17,end:23}),frameRate:2,repeat:1}),e.create({key:"jump2",frames:e.generateFrameNumbers("player",{start:17,end:23}),frameRate:2,repeat:1})},a={addCollider(e,t){return this.scene.physics.add.collider(this,e,t,null,this),this}};class i extends Phaser.Physics.Arcade.Sprite{constructor(e,t,s){super(e,t,s,"player"),e.add.existing(this),e.physics.add.existing(this),Object.assign(this,a),this.init(),this.initEvents()}init(){this.gravity=500,this.playerSpeed=150,this.jumpForce=300,this.extraJumps=2,this.cursors=this.scene.input.keyboard.createCursorKeys(),this.body.setSize(20,36),this.setOffset(10,25),this.body.setGravityY(this.gravity),this.setCollideWorldBounds(!0),this.setOrigin(.5,1),r(this.scene.anims)}initEvents(){this.scene.events.on(Phaser.Scenes.Events.UPDATE,this.update,this)}update(e,t){this.handlePlayerControls(e,t)}handlePlayerControls(e,t){const{left:s,right:r,space:a,up:i}=this.cursors;this.handleMovement(s,r),this.handleJump(a,i),this.handleJumpLogic()}handleMovement(e,t){const s=this.scene.input.keyboard.addKey("A"),r=this.scene.input.keyboard.addKey("D");e.isDown||s.isDown?(this.setVelocityX(-this.playerSpeed),this.setFlipX(!0)):t.isDown||r.isDown?(this.setVelocityX(this.playerSpeed),this.setFlipX(!1)):this.setVelocityX(0)}handleJump(e,t){const s=Phaser.Input.Keyboard.JustDown(e),r=Phaser.Input.Keyboard.JustDown(t),a=Phaser.Input.Keyboard.JustDown(this.scene.input.keyboard.addKey("W"));(s||r||a)&&this.extraJumps>0&&(console.log("can jump"),this.setVelocityY(-this.jumpForce),this.extraJumps--,console.log("extraJumps is "+this.extraJumps))}handleJumpLogic(e,t){this.body.onFloor()?(0===this.extraJumps&&(this.extraJumps=2),0!==this.body.velocity.x?this.play("run",!0):this.play("idle",!0)):1===this.extraJumps?this.play("jump1",!0):0===this.extraJumps&&this.play("jump2",!0)}}var n=i;class o extends Phaser.Physics.Arcade.Sprite{constructor(e,t,s,r){super(e,t,s,r),e.add.existing(this),e.physics.add.existing(this),Object.assign(this,a),this.init(),this.initEvents()}init(){this.gravity=500,this.speed=150,this.body.setGravityY(this.gravity),this.setSize(20,45),this.setOffset(10,20),this.setCollideWorldBounds(!0),this.setImmovable(!0),this.setOrigin(.5,1)}initEvents(){this.scene.events.on(Phaser.Scenes.Events.UPDATE,this.update,this)}update(e,t){this.setVelocityX(30)}}var l=o,c=e=>{e.create({key:"plagueDoctor-idle",frames:e.generateFrameNumbers("plagueDoctor",{start:0,end:12}),frameRate:8,repeat:-1})};const h={PlagueDoctor:class extends l{constructor(e,t,s){super(e,t,s,"plagueDoctor"),c(e.anims)}update(e,t){super.update(e,t),this.play("plagueDoctor-idle",!0)}}};class d extends Phaser.GameObjects.Group{constructor(e){super(e),Object.assign(this,a)}getTypes(){return h}}var p=d;class u extends Phaser.Scene{constructor(e){super("PlayScene"),this.config=e}create(){const e=this.createMap(),t=this.createLayers(e),s=this.getPlayerSpawns(t.playerSpawns),r=this.createPlayer(s.sceneEntrance),a=this.createEnemies(t.enemySpawns);this.createPlayerColliders(r,{colliders:{platformsColliders:t.platformsColliders}}),this.createEnemyColliders(a,{colliders:{platformsColliders:t.platformsColliders,player:r}}),this.createSceneExit(s.sceneExit,r),this.setupCameraToFollow(r),this.enableFullScreenMode()}enableFullScreenMode(){this.input.keyboard.on("keydown-Z",(function(e){try{this.scene.scale.isFullscreen?this.scene.scale.stopFullscreen():this.scene.scale.startFullscreen()}catch(e){console.log("Error is "+e)}}))}createMap(){const e=this.make.tilemap({key:"crystal_world_map"});return e.addTilesetImage("crystal_tileset_lev1","tiles-1"),e}createLayers(e){const t=e.getTileset("crystal_tileset_lev1"),s=e.createLayer("platforms_colliders",t),r=e.createLayer("environment",t),a=e.createLayer("platforms",t),i=e.getObjectLayer("player_spawns"),n=e.getObjectLayer("enemy_spawns");return s.setCollisionByProperty({collides:!0}),{environment:r,platforms:a,platformsColliders:s,playerSpawns:i,enemySpawns:n}}createPlayer(e){return new n(this,e.x,e.y)}createEnemies(e){const t=new p(this),s=t.getTypes();return e.objects.forEach(e=>{const r=new s[e.type](this,e.x,e.y);t.add(r)}),t}createPlayerColliders(e,{colliders:t}){e.addCollider(t.platformsColliders)}createEnemyColliders(e,{colliders:t}){e.addCollider(t.platformsColliders).addCollider(t.player)}setupCameraToFollow(e){const{mapWidth:t,mapHeight:s,zoomFactor:r}=this.config;this.physics.world.setBounds(0,0,t,s+200);const a=this.cameras.main;return a.setBounds(0,0,t,s),a.setZoom(r),a.startFollow(e),a}getPlayerSpawns(e){const t=e.objects;return{sceneEntrance:t.find(e=>"sceneEntrance"===e.name),sceneExit:t.find(e=>"sceneExit"===e.name)}}createSceneExit(e,t){const s=this.physics.add.sprite(e.x,e.y,"sceneExit").setSize(5,2*this.config.height).setOrigin(.5,1).setAlpha(0);this.physics.add.overlap(t,s,()=>{console.log("player should transition to next scene")})}}var y=u;class m extends Phaser.Scene{constructor(){super("PreloadScene")}preload(){this.load.tilemapTiledJSON("crystal_world_map","assets/tilemaps/world_map_crystal.json"),this.load.image("tiles-1","assets/art_maps/crystal_world/main_lev_build_1.png"),this.load.spritesheet("player","assets/characters/Gino Character/PNG/idle,run,jump_sheet.png",{frameWidth:32,frameHeight:64,spacing:32}),this.load.spritesheet("plagueDoctor","assets/characters/Enemy04/enemy04_sheet.png",{frameWidth:32,frameHeight:64,spacing:32})}create(){this.scene.start("PlayScene")}}var f=m;s.d(t,"DPR",(function(){return g}));const g=(e=>Math.round(2*e)/2)(window.devicePixelRatio),b=()=>Math.min(window.screen.width,window.screen.height)<=270,v={mapWidth:1600,mapHeight:640,width:480*(b()?g:4),height:270*(b()?g:4),zoomFactor:2},P=[f,y],w=e=>new e(v),x={type:Phaser.AUTO,...v,pixelArt:!0,physics:{default:"arcade",arcade:{}},scale:{mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH},parent:"phaser-game",scene:(()=>P.map(w))()};new Phaser.Game(x)}]);