!function(e){var t={};function s(i){if(t[i])return t[i].exports;var a=t[i]={i:i,l:!1,exports:{}};return e[i].call(a.exports,a,a.exports,s),a.l=!0,a.exports}s.m=e,s.c=t,s.d=function(e,t,i){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(s.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)s.d(i,a,function(t){return e[t]}.bind(null,a));return i},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=0)}([function(e,t,s){"use strict";s.r(t);var i=e=>{e.create({key:"idle",frames:e.generateFrameNumbers("player",{start:0,end:8}),frameRate:8,repeat:-1}),e.create({key:"run",frames:e.generateFrameNumbers("player",{start:11,end:16}),frameRate:8,repeat:-1}),e.create({key:"jump1",frames:e.generateFrameNumbers("player",{start:17,end:23}),frameRate:2,repeat:1}),e.create({key:"jump2",frames:e.generateFrameNumbers("player",{start:17,end:23}),frameRate:2,repeat:1})},a={addCollider(e,t){return this.scene.physics.add.collider(this,e,t,null,this),this},bodyPositionDifferenceX:0,prevRay:null,prevHasHit:null,raycast(e,t,{raylength:s=30,precision:i=0,steepness:a=1}){const{x:r,y:n,width:l,halfHeight:h}=e;if(this.bodyPositionDifferenceX+=e.x-e.prev.x,Math.abs(this.bodyPositionDifferenceX)<=i&&null!==this.prevHasHit)return{ray:this.prevRay,hasHit:this.prevHasHit};const o=new Phaser.Geom.Line;let c=!1;switch(e.facing){case Phaser.Physics.Arcade.FACING_RIGHT:o.x1=r+l,o.y1=n+h,o.x2=o.x1+s*a,o.y2=o.y1+s;break;case Phaser.Physics.Arcade.FACING_LEFT:o.x1=r,o.y1=n+h,o.x2=o.x1-s*a,o.y2=o.y1+s}const d=t.getTilesWithinShape(o);return d.length>0&&(c=this.prevHasHit=d.some(e=>-1!==e.index)),this.prevRay=o,this.bodyPositionDifferenceX=0,{ray:o,hasHit:c}}};class r extends Phaser.Physics.Arcade.Sprite{constructor(e,t,s,i){super(e,t,s),this.bar=new Phaser.GameObjects.Graphics(e),this.uiScale=2,this.x=t/this.uiScale,this.y=s/this.uiScale,this.hearts=i,this.heartScale=.8,this.size={width:40,height:8},this.filledHearts=[],this.emptyHearts=[],e.add.existing(this.bar),this.draw(this.x,this.y,this.uiScale,this.heartScale)}decreaseHearts(e){const t=this.filledHearts[this.hearts-e],s=this.emptyHearts[this.hearts-e];this.hearts-=e,this.scene.tweens.add({targets:t,alpha:0,scaleX:0,scaleY:0,ease:"Linear",duration:200});const i=this.scene.tweens.createTimeline();i.add({targets:s,scaleX:.5*this.heartScale,scaleY:.5*this.heartScale,ease:"Power1",duration:200}),i.add({targets:s,scaleX:1*this.heartScale,scaleY:1*this.heartScale,ease:"Power1",duration:200}),i.play()}draw(e,t,s,i){this.createPortrait(e,s),this.createHearts(e,t,i)}createPortrait(e,t){this.scene.add.sprite(e+320,350,"playerPortrait").setScale(t).setScrollFactor(0)}createHearts(e,t,s){const i=30*s;for(let s=0;s<this.hearts;s++)this.emptyHearts.push(this.scene.add.sprite(e+290+s*i,t+177.5,"emptyHeart")),this.filledHearts.push(this.scene.add.sprite(e+290+s*i,t+177.5,"filledHeart"));this.filledHearts.forEach(e=>e.setScale(s).setScrollFactor(0,0)),this.emptyHearts.forEach(e=>e.setScale(s).setScrollFactor(0,0))}}var n=r;class l extends Phaser.Events.EventEmitter{constructor(){super()}}var h=new l;class o extends Phaser.Physics.Arcade.Sprite{constructor(e,t,s){super(e,t,s,"player"),e.add.existing(this),e.physics.add.existing(this),Object.assign(this,a),this.init(),this.initEvents()}init(){this.gravity=500,this.playerSpeed=150,this.jumpForce=300,this.extraJumpsValue=1,this.extraJumps=this.extraJumpsValue,this.isDead=!1,this.isHit=!1,this.knockbackVelocity=175,this.cursors=this.scene.input.keyboard.createCursorKeys(),this.maxHearts=3,this.currentHealth=this.maxHearts,this.hp=new n(this.scene,this.scene.config.leftTopCorner.x+5,this.scene.config.leftTopCorner.y+5,this.maxHearts),this.body.setSize(20,36),this.setOffset(10,25),this.body.setGravityY(this.gravity),this.setCollideWorldBounds(!0),this.setOrigin(.5,1),i(this.scene.anims)}initEvents(){this.scene.events.on(Phaser.Scenes.Events.UPDATE,this.update,this)}update(){if(!this.isHit&&this.body){if(this.isDead)return this.setVelocityX(0),void this.play("idle",!0);this.getBounds().top>this.scene.config.mapHeight&&(this.scene.cameras.main.shake(240,.0075,!1),this.killPlayer()),this.handlePlayerControls()}}handlePlayerControls(){const{left:e,right:t,space:s,up:i}=this.cursors,a=this.body.onFloor();this.handleMovement(e,t),this.handleJump(s,i,a),this.handlePlayerAnim(a)}handleMovement(e,t){const s=this.scene.input.keyboard.addKey("A"),i=this.scene.input.keyboard.addKey("D");e.isDown||s.isDown?(this.setOffset(2,25),this.setVelocityX(-this.playerSpeed),this.setFlipX(!0)):t.isDown||i.isDown?(this.setOffset(10,25),this.setVelocityX(this.playerSpeed),this.setFlipX(!1)):this.setVelocityX(0)}handleJump(e,t){const s=Phaser.Input.Keyboard.JustDown(e),i=Phaser.Input.Keyboard.JustDown(t),a=Phaser.Input.Keyboard.JustDown(this.scene.input.keyboard.addKey("W"));(s||i||a)&&this.extraJumps>0&&(this.setVelocityY(-this.jumpForce),this.extraJumps--)}handlePlayerAnim(e){e?(this.extraJumps=this.extraJumpsValue,0!==this.body.velocity.x?this.play("run",!0):this.play("idle",!0)):1===this.extraJumps?this.play("jump1",!0):0===this.extraJumps&&this.play("jump2",!0)}playDamageTween(){return this.scene.tweens.add({targets:this,duration:100,repeat:-1,tint:16777215})}collidesWith(e){if(this.isHit||!this.body)return;this.currentHealth-=1,this.currentHealth<=0&&this.killPlayer(),this.isHit=!0,this.isKnockedBackwards();const t=this.playDamageTween();this.scene.cameras.main.shake(240,.001,!1),this.scene.time.delayedCall(500,()=>{this.isHit=!1,t.stop(),this.clearTint()}),this.hp.decreaseHearts(e.damage)}isKnockedBackwards(){this.body.touching.right?this.setVelocityX(-this.knockbackVelocity):this.setVelocityX(this.knockbackVelocity),setTimeout(()=>this.setVelocityY(-this.knockbackVelocity),0)}killPlayer(){this.isDead=!0,h.emit("PLAYER_DEAD")}}var c=o;class d extends Phaser.Physics.Arcade.Sprite{constructor(e,t,s,i){super(e,t,s,i),e.add.existing(this),e.physics.add.existing(this),Object.assign(this,a),this.init(),this.initEvents()}init(){this.gravity=500,this.speed=50,this.timeFromLastTurn=0,this.maxPatrolDistance=600,this.currentPatrolDistance=0,this.damage=1,this.platformCollidersLayer=null,this.body.setGravityY(this.gravity),this.setSize(20,45),this.setOffset(7,20),this.setCollideWorldBounds(!0),this.setImmovable(!0),this.setOrigin(.5,1),this.setVelocityX(this.speed),this.createGameEvents()}createGameEvents(){h.on("PLAYER_DEAD",()=>{this.stopMovement()})}initEvents(){this.scene.events.on(Phaser.Scenes.Events.UPDATE,this.update,this)}update(e){this.patrol(e)}stopMovement(){this.active&&(this.setVelocity(0),this.setActive(!1))}patrol(e){if(!this.body||!this.body.onFloor())return;this.currentPatrolDistance+=Math.abs(this.body.deltaX());const{hasHit:t}=this.raycast(this.body,this.platformCollidersLayer,{raylength:39,precision:1,steepness:1});(!t||this.currentPatrolDistance>=this.maxPatrolDistance)&&this.timeFromLastTurn+100<e&&(this.setFlipX(!this.flipX),this.setVelocityX(this.speed=-this.speed),this.timeFromLastTurn=e,this.currentPatrolDistance=0)}setPlatformColliders(e){this.platformCollidersLayer=e}}var p=d,y=e=>{e.create({key:"plagueDoctor-idle",frames:e.generateFrameNumbers("plagueDoctor",{start:0,end:12}),frameRate:8,repeat:-1})};const u={PlagueDoctor:class extends p{constructor(e,t,s){super(e,t,s,"plagueDoctor"),y(e.anims)}update(e,t){super.update(e,t),this.active&&this.play("plagueDoctor-idle",!0)}}};class m extends Phaser.GameObjects.Group{constructor(e){super(e),Object.assign(this,a)}getTypes(){return u}}var f=m;class g extends Phaser.Scene{constructor(e){super("PlayScene"),this.config=e}create({gameStatus:e}){this.cameras.main.fadeIn(1e3,0,0,0);const t=this.createMap(),s=this.createLayers(t),i=this.getPlayerSpawns(s.playerSpawns),a=this.createPlayer(i.sceneEntrance),r=this.createEnemies(s.enemySpawns,s.platformsColliders);this.createPlayerColliders(a,{colliders:{platformsColliders:s.platformsColliders}}),this.createEnemyColliders(r,{colliders:{platformsColliders:s.platformsColliders,player:a}}),this.createSceneExit(i.sceneExit,a),this.setupCameraToFollow(a),"PLAYER_DEAD"!==e&&(this.createGameEvents(),this.enableFullScreenMode())}enableFullScreenMode(){this.input.keyboard.on("keydown-Z",(function(e){try{this.scene.scale.isFullscreen?this.scene.scale.stopFullscreen():this.scene.scale.startFullscreen()}catch(e){console.log("Error is "+e)}}))}createMap(){const e=this.make.tilemap({key:"crystal_world_map"});return e.addTilesetImage("crystal_tileset_lev1","tiles-1"),e}createLayers(e){const t=e.getTileset("crystal_tileset_lev1"),s=e.createLayer("platforms_colliders",t),i=e.createLayer("environment",t),a=e.createLayer("platforms",t),r=e.getObjectLayer("player_spawns"),n=e.getObjectLayer("enemy_spawns");return s.setCollisionByProperty({collides:!0}),{environment:i,platforms:a,platformsColliders:s,playerSpawns:r,enemySpawns:n}}createGameEvents(){h.on("PLAYER_DEAD",()=>{this.cameras.main.fadeOut(2e3,0,0,0),this.time.delayedCall(3e3,()=>{this.scene.restart({gameStatus:"PLAYER_DEAD"})})})}createPlayer(e){return new c(this,e.x,e.y)}createEnemies(e,t){const s=new f(this),i=s.getTypes();return e.objects.forEach(e=>{const a=new i[e.type](this,e.x,e.y);a.setPlatformColliders(t),s.add(a)}),s}onPlayerCollision(e,t){t.collidesWith(e)}createPlayerColliders(e,{colliders:t}){e.addCollider(t.platformsColliders)}createEnemyColliders(e,{colliders:t}){e.addCollider(t.platformsColliders).addCollider(t.player,this.onPlayerCollision)}setupCameraToFollow(e){const{mapWidth:t,mapHeight:s,zoomFactor:i}=this.config;this.physics.world.setBounds(0,0,t,s+200);const a=this.cameras.main;return a.setBounds(0,0,t,s),a.setZoom(i),a.startFollow(e),a}getPlayerSpawns(e){const t=e.objects;return{sceneEntrance:t.find(e=>"sceneEntrance"===e.name),sceneExit:t.find(e=>"sceneExit"===e.name)}}createSceneExit(e,t){const s=this.physics.add.sprite(e.x,e.y,"sceneExit").setSize(5,2*this.config.height).setOrigin(.5,1).setAlpha(0);this.physics.add.overlap(t,s,()=>{console.log("Player has reached the edge of scene")})}}var P=g;class b extends Phaser.Scene{constructor(){super("PreloadScene")}preload(){this.load.tilemapTiledJSON("crystal_world_map","assets/tilemaps/world_map_crystal.json"),this.load.image("tiles-1","assets/art_maps/crystal_world/main_lev_build_1.png"),this.load.spritesheet("player","assets/characters/Gino Character/PNG/idle,run,jump_sheet.png",{frameWidth:32,frameHeight:64,spacing:32}),this.load.spritesheet("plagueDoctor","assets/characters/Enemy04/enemy04_sheet.png",{frameWidth:32,frameHeight:64,spacing:32}),this.load.image("emptyHeart","assets/gui/heart.png"),this.load.image("filledHeart","assets/gui/heart-filled.png"),this.load.image("playerPortrait","assets/gui/portrait.png")}create(){this.scene.start("PlayScene")}}var v=b;s.d(t,"DPR",(function(){return x}));const x=(e=>Math.round(2*e)/2)(window.devicePixelRatio),w=()=>Math.min(window.screen.width,window.screen.height)<=270,S=480*(w()?x:4),E=270*(w()?x:4),H={mapWidth:1600,mapHeight:640,width:S,height:E,zoomFactor:2,leftTopCorner:{x:(S-S/2)/2,y:(E-E/2)/2}},D=[v,P],C=e=>new e(H),k={type:Phaser.AUTO,...H,pixelArt:!0,physics:{default:"arcade",arcade:{}},scale:{mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH},parent:"phaser-game",scene:(()=>D.map(C))()};new Phaser.Game(k)}]);